import{defineService as m}from"@snek-at/function";import{createTransport as d}from"nodemailer";import h from"nodemailer-plugin-inline-base64";var i=(e,c,r)=>new Promise((s,n)=>{var a=t=>{try{l(r.next(t))}catch(u){n(u)}},o=t=>{try{l(r.throw(t))}catch(u){n(u)}},l=t=>t.done?s(t.value):Promise.resolve(t.value).then(a,o);l((r=r.apply(e,c)).next())});function f(e){return i(this,arguments,function*({host:c,port:r,secure:s,user:n,password:a}){return new Promise((o,l)=>{o(d({host:c,port:r,secure:s,auth:{user:n,pass:a}}))})})}function v(e,c){return i(this,null,function*(){const r=yield f(c);return r.use("compile",h({cidPrefix:"snek_"})),(yield r.sendMail({from:e.from,to:e.to,cc:e.cc,bcc:e.bcc,subject:e.subject,text:e.text,html:e.html})).response})}var y=(e,c,r)=>new Promise((s,n)=>{var a=t=>{try{l(r.next(t))}catch(u){n(u)}},o=t=>{try{l(r.throw(t))}catch(u){n(u)}},l=t=>t.done?s(t.value):Promise.resolve(t.value).then(a,o);l((r=r.apply(e,c)).next())}),p=m({Query:{},Mutation:{send:(e,c,r,s)=>y(void 0,null,function*(){return v({from:e.from,to:e.to,cc:e.cc,bcc:e.bcc,subject:c,html:r},{host:s.host,port:s.port,secure:s.secure,user:s.user,password:s.password})})}},{configureApp:e=>(e.get("/hello",(c,r)=>{r.send("Hello world!!")}),e.get("/hello/:name",(c,r)=>{r.send("Hello "+c.params.name)}),e)});export{p as default};
export const typeDefs = "input EnvelopeInput {\n\tfrom: String!\n\tto: [String!]!\n\tcc: [String!]\n\tbcc: [String!]\n}\ninput ConfigInput {\n\thost: String!\n\tport: Number!\n\tsecure: Boolean!\n\tuser: String!\n\tpassword: String!\n}\ntype Query {\nversion: String!\n}\ntype Mutation {\nsend(envelope: EnvelopeInput!, subject: String!, message: String!, config: ConfigInput!): Boolean!\n}\nscalar Number\nscalar Any\nscalar Object\n";